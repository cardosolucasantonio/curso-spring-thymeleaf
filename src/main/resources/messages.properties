#Classe utilizada pela especificação SpringValidator e foi criado antes do BeanValidation

#É possível não precisar usar o unicode, mas para isso, você precisa garantir que tudo esteja em UTF-8.
#O padrão de arquivo de propriedades precisa estar em UTF-8, já que todoo resto da aplicação está em UTF-8,
#setamos isso no Maven e o Spring Boot setou na configuração do Thymeleaf pra nós. Mas a questão é o arquivo de propriedades,
#diferente de um arquivo XML ou HTML onde podemos dizer no cabeçalho do arquivo que o formato será UTF-8,
#no arquivo de propriedades não é possível. O arquivo é salvo conforme o padrão do sistema operacional
#e no windows é windows-1252 e não UTF-8. Algumas IDEs tem opções para você forçar que os arquivos de propriedades sejam
#salvos em UTF-8, o problema disso é o seguinte, se você abrir ou editar o arquivo fora da IDE no windows,
#ou compilar o arquivo por fora da IDE ele pode voltar a ser windows-1252.
#Se o seu colega de trabalho não tiver mudado a IDE dele para forçar o uso de UTF-8, o arquivo volta para 1252.
#Por isso, é mais indicado usar o unicode.

PosteriorDataEntrada.funcionario.data.dataSaida = Data de saida deve ser posterior a data de entrada.

#Títulos do Slidebar
sidebar.link.home = Home
sidebar.link.cadastrar = Cadastrar
sidebar.link.listar = Listar
sidebar.link.departamentos = Departamentos
sidebar.link.cargos = Cargos
sidebar.link.funcionarios = Funcion\u00E1rios

#Títulos Tabela Funcionário
tabela.funcionario.col.nome = Nome
tabela.funcionario.col.salario = Sal\u00E1rio
tabela.funcionario.col.departamento = Departamento
tabela.funcionario.col.cargo = Cargo
tabela.funcionario.col.endereco = Endere\u00E7o
tabela.funcionario.col.dataEntrada = Admiss\u00E3o
tabela.funcionario.col.dataSaida = Demiss\u00E3o
tabela.funcionario.col.acao = A\u00E7\u00E3o